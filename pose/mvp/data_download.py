# utils/data_utils.py –∏–ª–∏ –≤ –≤–∞—à–µ–º —Å–∫—Ä–∏–ø—Ç–µ
from dvc.repo import Repo
from pathlib import Path


def setup_data():
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ DVC –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.
    """
    print("üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ DVC...")

    # –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö .dvc —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
    dvc_targets = []

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫–∏–µ .dvc —Ñ–∞–π–ª—ã –µ—Å—Ç—å
    possible_targets = [
        "data/rsvid/train",
        "data/rsvid/eval",
        "data/rsvid/train/kp_3d",
        "data/rsvid/eval/kp_3d",
    ]

    for target in possible_targets:
        dvc_file = Path(f"{target}.dvc")
        if dvc_file.exists():
            dvc_targets.append(target)
            print(f"–ù–∞–π–¥–µ–Ω {dvc_file}")

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Ü–µ–ª–∏ —á–µ—Ä–µ–∑ Repo API
    if dvc_targets:
        print(f"–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ DVC: {dvc_targets}")
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º Repo –∫–ª–∞—Å—Å –≤–º–µ—Å—Ç–æ dvc.api.pull
            repo = Repo(".")
            repo.pull(targets=dvc_targets)
            print("‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —á–µ—Ä–µ–∑ DVC")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ DVC: {e}")
            # –ü–æ–ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞–∂–¥—É—é —Ü–µ–ª—å –æ—Ç–¥–µ–ª—å–Ω–æ
            for target in dvc_targets:
                try:
                    print(f"–ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å {target} –æ—Ç–¥–µ–ª—å–Ω–æ...")
                    repo.pull(targets=[target])
                    print(f"‚úÖ {target} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω")
                except Exception as target_error:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ {target}: {target_error}")
    else:
        print("‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–æ .dvc —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏")

    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ features –ª–æ–∫–∞–ª—å–Ω–æ
    features_dirs = [
        Path("data/rsvid/train/features"),
        Path("data/rsvid/eval/features"),
    ]

    for features_dir in features_dirs:
        features_dir.mkdir(parents=True, exist_ok=True)

    print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞")


if __name__ == "__main__":
    setup_data()
